# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: edabackenddaii
service: eventify-eda-be

provider:
  name: aws
  runtime: python3.10
  region: us-east-1
  profile: aws-academy
  stage: dev
  role: arn:aws:iam::747661705570:role/LabRole
  iamRoleStatements:
    - Effect: Allow
      Action:
        - "execute-api:ManageConnections"
      Resource: "arn:aws:execute-api:us-east-1:*:*/*/*/@connections/*"
    - Effect: Allow
      Action:
        - dynamodb:PutItem
        - dynamodb:DeleteItem
        - dynamodb:Scan
      Resource:
        - arn:aws:dynamodb:us-east-1:*:table/ConnectionsTable
    - Effect: Allow
      Action:
        - lambda:InvokeFunction
      Resource: "*"
    - Effect: Allow
      Action:
        - events:PutEvents
      Resource:
        - arn:aws:events:us-east-1:747661705570:event-bus/default

functions:
  testHandler:
    handler: handler.lambda_handler
    events:
      - eventBridge:
          eventBus: default
          pattern:
            source:
              - myapp

  websocketConnect:
    handler: api.websocket.connect
    events:
      - websocket:
          route: $connect

  websocketDisconnect:
    handler: api.websocket.disconnect
    events:
      - websocket:
          route: $disconnect

  websocketDefault:
    handler: api.websocket.default
    events:
      - websocket:
          route: $default

  restApi:
    handler: api.app.handler
    events:
      - http:
          path: /
          method: get

  saveWebsocketUrl:
    handler: save_url.lambda_handler
    timeout: 30

resources:
  Resources:
    ConnectionsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ConnectionsTable
        AttributeDefinitions:
          - AttributeName: connectionId
            AttributeType: S
        KeySchema:
          - AttributeName: connectionId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

plugins:
  - serverless-python-requirements
  - serverless-scriptable-plugin

custom:
  pythonRequirements:
    dockerizePip: non-linux
    useDownloadCache: true
    useStaticCache: true

  scriptHooks:
    after:deploy:finalize: 'aws lambda invoke --function-name eventify-eda-be-dev-saveWebsocketUrl --log-type Tail --profile aws-academy outfile.txt'